create table "public"."column_filters" (
    "id" bigint generated by default as identity not null,
    "table_identification_id" bigint not null,
    "column_index" integer not null,
    "filter_type" text not null,
    "created_at" timestamp with time zone not null default now(),
    "updated_at" timestamp with time zone not null default now()
);


alter table "public"."column_filters" enable row level security;

create table "public"."column_identification" (
    "id" bigint generated by default as identity not null,
    "table_identification_id" bigint not null,
    "column_index" integer not null,
    "type" text not null,
    "description" text not null,
    "is_custom" boolean not null default false,
    "external_id" text,
    "external_name" text,
    "external_kind" text,
    "min_value" numeric,
    "max_value" numeric,
    "log_scale" boolean,
    "created_at" timestamp with time zone not null default now(),
    "updated_at" timestamp with time zone not null default now()
);


alter table "public"."column_identification" enable row level security;

create table "public"."column_redis_data" (
    "id" bigint generated by default as identity not null,
    "table_identification_id" bigint not null,
    "column_index" integer not null,
    "status" text,
    "matches_count" integer,
    "total_count" integer,
    "created_at" timestamp with time zone not null default now(),
    "updated_at" timestamp with time zone not null default now()
);


alter table "public"."column_redis_data" enable row level security;

create table "public"."column_redis_info" (
    "id" bigint generated by default as identity not null,
    "column_redis_data_id" bigint not null,
    "link_prefix" text,
    "description" text,
    "num_entries" integer,
    "link" text,
    "created_at" timestamp with time zone not null default now(),
    "updated_at" timestamp with time zone not null default now()
);


alter table "public"."column_redis_info" enable row level security;

create table "public"."column_redis_match" (
    "id" bigint generated by default as identity not null,
    "column_redis_data_id" bigint not null,
    "match_value" text not null,
    "created_at" timestamp with time zone not null default now(),
    "updated_at" timestamp with time zone not null default now()
);


alter table "public"."column_redis_match" enable row level security;

create table "public"."column_stats" (
    "id" bigint generated by default as identity not null,
    "table_identification_id" bigint not null,
    "column_index" integer not null,
    "min_value" numeric,
    "max_value" numeric,
    "created_at" timestamp with time zone not null default now(),
    "updated_at" timestamp with time zone not null default now()
);


alter table "public"."column_stats" enable row level security;

create table "public"."column_suggested_action" (
    "id" bigint generated by default as identity not null,
    "column_identification_id" bigint not null,
    "action" text not null,
    "created_at" timestamp with time zone not null default now(),
    "updated_at" timestamp with time zone not null default now()
);


alter table "public"."column_suggested_action" enable row level security;

create table "public"."column_type_options" (
    "id" bigint generated by default as identity not null,
    "table_identification_id" bigint not null,
    "column_index" integer not null,
    "min_value" numeric,
    "max_value" numeric,
    "logarithmic" boolean not null default false,
    "created_at" timestamp with time zone not null default now(),
    "updated_at" timestamp with time zone not null default now()
);


alter table "public"."column_type_options" enable row level security;

alter table "public"."table_identification" drop column "identifications";

alter table "public"."table_identification" add column "has_header" boolean not null default false;

CREATE UNIQUE INDEX column_filters_pkey ON public.column_filters USING btree (id);

CREATE UNIQUE INDEX column_filters_table_identification_id_column_index_key ON public.column_filters USING btree (table_identification_id, column_index);

CREATE UNIQUE INDEX column_identification_pkey ON public.column_identification USING btree (id);

CREATE UNIQUE INDEX column_identification_table_identification_id_column_index_key ON public.column_identification USING btree (table_identification_id, column_index);

CREATE UNIQUE INDEX column_redis_data_pkey ON public.column_redis_data USING btree (id);

CREATE UNIQUE INDEX column_redis_data_table_identification_id_column_index_key ON public.column_redis_data USING btree (table_identification_id, column_index);

CREATE UNIQUE INDEX column_redis_info_column_redis_data_id_key ON public.column_redis_info USING btree (column_redis_data_id);

CREATE UNIQUE INDEX column_redis_info_pkey ON public.column_redis_info USING btree (id);

CREATE UNIQUE INDEX column_redis_match_pkey ON public.column_redis_match USING btree (id);

CREATE UNIQUE INDEX column_stats_pkey ON public.column_stats USING btree (id);

CREATE UNIQUE INDEX column_stats_table_identification_id_column_index_key ON public.column_stats USING btree (table_identification_id, column_index);

CREATE UNIQUE INDEX column_suggested_action_pkey ON public.column_suggested_action USING btree (id);

CREATE UNIQUE INDEX column_type_options_pkey ON public.column_type_options USING btree (id);

CREATE UNIQUE INDEX column_type_options_table_identification_id_column_index_key ON public.column_type_options USING btree (table_identification_id, column_index);

alter table "public"."column_filters" add constraint "column_filters_pkey" PRIMARY KEY using index "column_filters_pkey";

alter table "public"."column_identification" add constraint "column_identification_pkey" PRIMARY KEY using index "column_identification_pkey";

alter table "public"."column_redis_data" add constraint "column_redis_data_pkey" PRIMARY KEY using index "column_redis_data_pkey";

alter table "public"."column_redis_info" add constraint "column_redis_info_pkey" PRIMARY KEY using index "column_redis_info_pkey";

alter table "public"."column_redis_match" add constraint "column_redis_match_pkey" PRIMARY KEY using index "column_redis_match_pkey";

alter table "public"."column_stats" add constraint "column_stats_pkey" PRIMARY KEY using index "column_stats_pkey";

alter table "public"."column_suggested_action" add constraint "column_suggested_action_pkey" PRIMARY KEY using index "column_suggested_action_pkey";

alter table "public"."column_type_options" add constraint "column_type_options_pkey" PRIMARY KEY using index "column_type_options_pkey";

alter table "public"."column_filters" add constraint "column_filters_table_identification_id_column_index_key" UNIQUE using index "column_filters_table_identification_id_column_index_key";

alter table "public"."column_filters" add constraint "column_filters_table_identification_id_fkey" FOREIGN KEY (table_identification_id) REFERENCES table_identification(id) ON DELETE CASCADE not valid;

alter table "public"."column_filters" validate constraint "column_filters_table_identification_id_fkey";

alter table "public"."column_identification" add constraint "column_identification_table_identification_id_column_index_key" UNIQUE using index "column_identification_table_identification_id_column_index_key";

alter table "public"."column_identification" add constraint "column_identification_table_identification_id_fkey" FOREIGN KEY (table_identification_id) REFERENCES table_identification(id) ON DELETE CASCADE not valid;

alter table "public"."column_identification" validate constraint "column_identification_table_identification_id_fkey";

alter table "public"."column_redis_data" add constraint "column_redis_data_table_identification_id_column_index_key" UNIQUE using index "column_redis_data_table_identification_id_column_index_key";

alter table "public"."column_redis_data" add constraint "column_redis_data_table_identification_id_fkey" FOREIGN KEY (table_identification_id) REFERENCES table_identification(id) ON DELETE CASCADE not valid;

alter table "public"."column_redis_data" validate constraint "column_redis_data_table_identification_id_fkey";

alter table "public"."column_redis_info" add constraint "column_redis_info_column_redis_data_id_fkey" FOREIGN KEY (column_redis_data_id) REFERENCES column_redis_data(id) ON DELETE CASCADE not valid;

alter table "public"."column_redis_info" validate constraint "column_redis_info_column_redis_data_id_fkey";

alter table "public"."column_redis_info" add constraint "column_redis_info_column_redis_data_id_key" UNIQUE using index "column_redis_info_column_redis_data_id_key";

alter table "public"."column_redis_match" add constraint "column_redis_match_column_redis_data_id_fkey" FOREIGN KEY (column_redis_data_id) REFERENCES column_redis_data(id) ON DELETE CASCADE not valid;

alter table "public"."column_redis_match" validate constraint "column_redis_match_column_redis_data_id_fkey";

alter table "public"."column_stats" add constraint "column_stats_table_identification_id_column_index_key" UNIQUE using index "column_stats_table_identification_id_column_index_key";

alter table "public"."column_stats" add constraint "column_stats_table_identification_id_fkey" FOREIGN KEY (table_identification_id) REFERENCES table_identification(id) ON DELETE CASCADE not valid;

alter table "public"."column_stats" validate constraint "column_stats_table_identification_id_fkey";

alter table "public"."column_suggested_action" add constraint "column_suggested_action_column_identification_id_fkey" FOREIGN KEY (column_identification_id) REFERENCES column_identification(id) ON DELETE CASCADE not valid;

alter table "public"."column_suggested_action" validate constraint "column_suggested_action_column_identification_id_fkey";

alter table "public"."column_type_options" add constraint "column_type_options_table_identification_id_column_index_key" UNIQUE using index "column_type_options_table_identification_id_column_index_key";

alter table "public"."column_type_options" add constraint "column_type_options_table_identification_id_fkey" FOREIGN KEY (table_identification_id) REFERENCES table_identification(id) ON DELETE CASCADE not valid;

alter table "public"."column_type_options" validate constraint "column_type_options_table_identification_id_fkey";

grant delete on table "public"."column_filters" to "anon";

grant insert on table "public"."column_filters" to "anon";

grant references on table "public"."column_filters" to "anon";

grant select on table "public"."column_filters" to "anon";

grant trigger on table "public"."column_filters" to "anon";

grant truncate on table "public"."column_filters" to "anon";

grant update on table "public"."column_filters" to "anon";

grant delete on table "public"."column_filters" to "authenticated";

grant insert on table "public"."column_filters" to "authenticated";

grant references on table "public"."column_filters" to "authenticated";

grant select on table "public"."column_filters" to "authenticated";

grant trigger on table "public"."column_filters" to "authenticated";

grant truncate on table "public"."column_filters" to "authenticated";

grant update on table "public"."column_filters" to "authenticated";

grant delete on table "public"."column_filters" to "service_role";

grant insert on table "public"."column_filters" to "service_role";

grant references on table "public"."column_filters" to "service_role";

grant select on table "public"."column_filters" to "service_role";

grant trigger on table "public"."column_filters" to "service_role";

grant truncate on table "public"."column_filters" to "service_role";

grant update on table "public"."column_filters" to "service_role";

grant delete on table "public"."column_identification" to "anon";

grant insert on table "public"."column_identification" to "anon";

grant references on table "public"."column_identification" to "anon";

grant select on table "public"."column_identification" to "anon";

grant trigger on table "public"."column_identification" to "anon";

grant truncate on table "public"."column_identification" to "anon";

grant update on table "public"."column_identification" to "anon";

grant delete on table "public"."column_identification" to "authenticated";

grant insert on table "public"."column_identification" to "authenticated";

grant references on table "public"."column_identification" to "authenticated";

grant select on table "public"."column_identification" to "authenticated";

grant trigger on table "public"."column_identification" to "authenticated";

grant truncate on table "public"."column_identification" to "authenticated";

grant update on table "public"."column_identification" to "authenticated";

grant delete on table "public"."column_identification" to "service_role";

grant insert on table "public"."column_identification" to "service_role";

grant references on table "public"."column_identification" to "service_role";

grant select on table "public"."column_identification" to "service_role";

grant trigger on table "public"."column_identification" to "service_role";

grant truncate on table "public"."column_identification" to "service_role";

grant update on table "public"."column_identification" to "service_role";

grant delete on table "public"."column_redis_data" to "anon";

grant insert on table "public"."column_redis_data" to "anon";

grant references on table "public"."column_redis_data" to "anon";

grant select on table "public"."column_redis_data" to "anon";

grant trigger on table "public"."column_redis_data" to "anon";

grant truncate on table "public"."column_redis_data" to "anon";

grant update on table "public"."column_redis_data" to "anon";

grant delete on table "public"."column_redis_data" to "authenticated";

grant insert on table "public"."column_redis_data" to "authenticated";

grant references on table "public"."column_redis_data" to "authenticated";

grant select on table "public"."column_redis_data" to "authenticated";

grant trigger on table "public"."column_redis_data" to "authenticated";

grant truncate on table "public"."column_redis_data" to "authenticated";

grant update on table "public"."column_redis_data" to "authenticated";

grant delete on table "public"."column_redis_data" to "service_role";

grant insert on table "public"."column_redis_data" to "service_role";

grant references on table "public"."column_redis_data" to "service_role";

grant select on table "public"."column_redis_data" to "service_role";

grant trigger on table "public"."column_redis_data" to "service_role";

grant truncate on table "public"."column_redis_data" to "service_role";

grant update on table "public"."column_redis_data" to "service_role";

grant delete on table "public"."column_redis_info" to "anon";

grant insert on table "public"."column_redis_info" to "anon";

grant references on table "public"."column_redis_info" to "anon";

grant select on table "public"."column_redis_info" to "anon";

grant trigger on table "public"."column_redis_info" to "anon";

grant truncate on table "public"."column_redis_info" to "anon";

grant update on table "public"."column_redis_info" to "anon";

grant delete on table "public"."column_redis_info" to "authenticated";

grant insert on table "public"."column_redis_info" to "authenticated";

grant references on table "public"."column_redis_info" to "authenticated";

grant select on table "public"."column_redis_info" to "authenticated";

grant trigger on table "public"."column_redis_info" to "authenticated";

grant truncate on table "public"."column_redis_info" to "authenticated";

grant update on table "public"."column_redis_info" to "authenticated";

grant delete on table "public"."column_redis_info" to "service_role";

grant insert on table "public"."column_redis_info" to "service_role";

grant references on table "public"."column_redis_info" to "service_role";

grant select on table "public"."column_redis_info" to "service_role";

grant trigger on table "public"."column_redis_info" to "service_role";

grant truncate on table "public"."column_redis_info" to "service_role";

grant update on table "public"."column_redis_info" to "service_role";

grant delete on table "public"."column_redis_match" to "anon";

grant insert on table "public"."column_redis_match" to "anon";

grant references on table "public"."column_redis_match" to "anon";

grant select on table "public"."column_redis_match" to "anon";

grant trigger on table "public"."column_redis_match" to "anon";

grant truncate on table "public"."column_redis_match" to "anon";

grant update on table "public"."column_redis_match" to "anon";

grant delete on table "public"."column_redis_match" to "authenticated";

grant insert on table "public"."column_redis_match" to "authenticated";

grant references on table "public"."column_redis_match" to "authenticated";

grant select on table "public"."column_redis_match" to "authenticated";

grant trigger on table "public"."column_redis_match" to "authenticated";

grant truncate on table "public"."column_redis_match" to "authenticated";

grant update on table "public"."column_redis_match" to "authenticated";

grant delete on table "public"."column_redis_match" to "service_role";

grant insert on table "public"."column_redis_match" to "service_role";

grant references on table "public"."column_redis_match" to "service_role";

grant select on table "public"."column_redis_match" to "service_role";

grant trigger on table "public"."column_redis_match" to "service_role";

grant truncate on table "public"."column_redis_match" to "service_role";

grant update on table "public"."column_redis_match" to "service_role";

grant delete on table "public"."column_stats" to "anon";

grant insert on table "public"."column_stats" to "anon";

grant references on table "public"."column_stats" to "anon";

grant select on table "public"."column_stats" to "anon";

grant trigger on table "public"."column_stats" to "anon";

grant truncate on table "public"."column_stats" to "anon";

grant update on table "public"."column_stats" to "anon";

grant delete on table "public"."column_stats" to "authenticated";

grant insert on table "public"."column_stats" to "authenticated";

grant references on table "public"."column_stats" to "authenticated";

grant select on table "public"."column_stats" to "authenticated";

grant trigger on table "public"."column_stats" to "authenticated";

grant truncate on table "public"."column_stats" to "authenticated";

grant update on table "public"."column_stats" to "authenticated";

grant delete on table "public"."column_stats" to "service_role";

grant insert on table "public"."column_stats" to "service_role";

grant references on table "public"."column_stats" to "service_role";

grant select on table "public"."column_stats" to "service_role";

grant trigger on table "public"."column_stats" to "service_role";

grant truncate on table "public"."column_stats" to "service_role";

grant update on table "public"."column_stats" to "service_role";

grant delete on table "public"."column_suggested_action" to "anon";

grant insert on table "public"."column_suggested_action" to "anon";

grant references on table "public"."column_suggested_action" to "anon";

grant select on table "public"."column_suggested_action" to "anon";

grant trigger on table "public"."column_suggested_action" to "anon";

grant truncate on table "public"."column_suggested_action" to "anon";

grant update on table "public"."column_suggested_action" to "anon";

grant delete on table "public"."column_suggested_action" to "authenticated";

grant insert on table "public"."column_suggested_action" to "authenticated";

grant references on table "public"."column_suggested_action" to "authenticated";

grant select on table "public"."column_suggested_action" to "authenticated";

grant trigger on table "public"."column_suggested_action" to "authenticated";

grant truncate on table "public"."column_suggested_action" to "authenticated";

grant update on table "public"."column_suggested_action" to "authenticated";

grant delete on table "public"."column_suggested_action" to "service_role";

grant insert on table "public"."column_suggested_action" to "service_role";

grant references on table "public"."column_suggested_action" to "service_role";

grant select on table "public"."column_suggested_action" to "service_role";

grant trigger on table "public"."column_suggested_action" to "service_role";

grant truncate on table "public"."column_suggested_action" to "service_role";

grant update on table "public"."column_suggested_action" to "service_role";

grant delete on table "public"."column_type_options" to "anon";

grant insert on table "public"."column_type_options" to "anon";

grant references on table "public"."column_type_options" to "anon";

grant select on table "public"."column_type_options" to "anon";

grant trigger on table "public"."column_type_options" to "anon";

grant truncate on table "public"."column_type_options" to "anon";

grant update on table "public"."column_type_options" to "anon";

grant delete on table "public"."column_type_options" to "authenticated";

grant insert on table "public"."column_type_options" to "authenticated";

grant references on table "public"."column_type_options" to "authenticated";

grant select on table "public"."column_type_options" to "authenticated";

grant trigger on table "public"."column_type_options" to "authenticated";

grant truncate on table "public"."column_type_options" to "authenticated";

grant update on table "public"."column_type_options" to "authenticated";

grant delete on table "public"."column_type_options" to "service_role";

grant insert on table "public"."column_type_options" to "service_role";

grant references on table "public"."column_type_options" to "service_role";

grant select on table "public"."column_type_options" to "service_role";

grant trigger on table "public"."column_type_options" to "service_role";

grant truncate on table "public"."column_type_options" to "service_role";

grant update on table "public"."column_type_options" to "service_role";

create policy "Authenticated user can manage their column filters"
on "public"."column_filters"
as permissive
for all
to authenticated
using ((( SELECT table_identification.user_id
   FROM table_identification
  WHERE (table_identification.id = column_filters.table_identification_id)) = auth.uid()));


create policy "Authenticated user can manage their column identifications"
on "public"."column_identification"
as permissive
for all
to authenticated
using ((( SELECT table_identification.user_id
   FROM table_identification
  WHERE (table_identification.id = column_identification.table_identification_id)) = auth.uid()));


create policy "Authenticated user can manage their column redis data"
on "public"."column_redis_data"
as permissive
for all
to authenticated
using ((( SELECT table_identification.user_id
   FROM table_identification
  WHERE (table_identification.id = column_redis_data.table_identification_id)) = auth.uid()));


create policy "Authenticated user can manage their column redis info"
on "public"."column_redis_info"
as permissive
for all
to authenticated
using ((( SELECT table_identification.user_id
   FROM table_identification
  WHERE (table_identification.id = ( SELECT column_redis_data.table_identification_id
           FROM column_redis_data
          WHERE (column_redis_data.id = column_redis_info.column_redis_data_id)))) = auth.uid()));


create policy "Authenticated user can manage their column redis matches"
on "public"."column_redis_match"
as permissive
for all
to authenticated
using ((( SELECT table_identification.user_id
   FROM table_identification
  WHERE (table_identification.id = ( SELECT column_redis_data.table_identification_id
           FROM column_redis_data
          WHERE (column_redis_data.id = column_redis_match.column_redis_data_id)))) = auth.uid()));


create policy "Authenticated user can manage their column stats"
on "public"."column_stats"
as permissive
for all
to authenticated
using ((( SELECT table_identification.user_id
   FROM table_identification
  WHERE (table_identification.id = column_stats.table_identification_id)) = auth.uid()));


create policy "Authenticated user can manage their column suggested actions"
on "public"."column_suggested_action"
as permissive
for all
to authenticated
using ((( SELECT table_identification.user_id
   FROM table_identification
  WHERE (table_identification.id = ( SELECT column_identification.table_identification_id
           FROM column_identification
          WHERE (column_identification.id = column_suggested_action.column_identification_id)))) = auth.uid()));


create policy "Authenticated user can manage their column type options"
on "public"."column_type_options"
as permissive
for all
to authenticated
using ((( SELECT table_identification.user_id
   FROM table_identification
  WHERE (table_identification.id = column_type_options.table_identification_id)) = auth.uid()));


CREATE TRIGGER set_updated_at BEFORE UPDATE ON public.column_filters FOR EACH ROW EXECUTE FUNCTION set_updated_at();

CREATE TRIGGER set_updated_at BEFORE UPDATE ON public.column_identification FOR EACH ROW EXECUTE FUNCTION set_updated_at();

CREATE TRIGGER set_updated_at BEFORE UPDATE ON public.column_redis_data FOR EACH ROW EXECUTE FUNCTION set_updated_at();

CREATE TRIGGER set_updated_at BEFORE UPDATE ON public.column_redis_info FOR EACH ROW EXECUTE FUNCTION set_updated_at();

CREATE TRIGGER set_updated_at BEFORE UPDATE ON public.column_redis_match FOR EACH ROW EXECUTE FUNCTION set_updated_at();

CREATE TRIGGER set_updated_at BEFORE UPDATE ON public.column_stats FOR EACH ROW EXECUTE FUNCTION set_updated_at();

CREATE TRIGGER set_updated_at BEFORE UPDATE ON public.column_suggested_action FOR EACH ROW EXECUTE FUNCTION set_updated_at();

CREATE TRIGGER set_updated_at BEFORE UPDATE ON public.column_type_options FOR EACH ROW EXECUTE FUNCTION set_updated_at();


