/**
 * Adapted from https://dev.to/01kg/snaplet-supabase-flutter-how-to-create-a-known-user-for-testing-o7j
 */

import bcrypt from "bcrypt";
import { v4 as uuidv4 } from "uuid";

import { createSeedClient } from "@snaplet/seed";

async function hashPassword(password: string): Promise<string> {
  const saltRounds = 10; // You can adjust the salt rounds as needed
  const salt = await bcrypt.genSalt(saltRounds);
  const hashedPassword = await bcrypt.hash(password, salt);
  return hashedPassword;
}

const USER_EMAIL = "user@example.com";
const USER_PASSWORD = "password3423089";

const main = async () => {
  console.log("-- Autogenerated by seed.ts");

  const USER_ENCRYPTED_PASSWORD = await hashPassword(USER_PASSWORD);
  const USER_ID = uuidv4();

  const seed = await createSeedClient({ dryRun: true });

  // Truncate all tables in the database
  await seed.$resetDatabase();

  // Create the user and its related data
  await seed.users([
    {
      id: USER_ID,
      instance_id: "00000000-0000-0000-0000-000000000000",
      aud: "authenticated",
      role: "authenticated",
      email: USER_EMAIL,
      encrypted_password: USER_ENCRYPTED_PASSWORD,
      invited_at: null,
      confirmation_token: "",
      confirmation_sent_at: null,
      recovery_token: "",
      recovery_sent_at: null,
      email_change_token_new: "",
      email_change: "",
      email_change_sent_at: null,
      raw_app_meta_data: { "provider": "email", "providers": ["email"] },
      raw_user_meta_data: {
        "sub": USER_ID,
        "email": USER_EMAIL,
        "email_verified": false,
        "phone_verified": false,
      },
      is_super_admin: null,
      phone: null,
      phone_confirmed_at: null,
      phone_change: "",
      phone_change_token: "",
      phone_change_sent_at: null,
      email_change_token_current: "",
      email_change_confirm_status: 0,
      banned_until: null,
      reauthentication_token: "",
      reauthentication_sent_at: null,
      is_sso_user: false,
      deleted_at: null,
      is_anonymous: false,

      identities: [{
        identity_data: {
          "sub": USER_ID,
          "email": USER_EMAIL,
          "email_verified": false,
          "phone_verified": false,
        },
        provider: "email",
        provider_id: USER_ID, // If the provider is email or phone, the id is the user's id from the auth.users table. https://supabase.com/docs/guides/auth/identities#the-user-identity-object
      }],
    },
  ]);

  await seed.buckets([{
    id: "files",
    name: "files",
    allowed_mime_types: ["text/csv"],
    public: false,
  }]);

  await seed.custom_type([{
    name: "pdb-ids",
    kind: "enum",
    description:
      "Unique accession codes for the molecular models (atomic coordinate files) in the Protein Data Bank (PDB).",
    user_id: USER_ID,
    rules: [
      "4 characters in length",
      "alphanumeric",
      "planned to be extended in the future to eight characters prefixed by 'pdb'",
    ],
    examples: ["1AKE", "1AKG", "1AKH", "1AKI", "1AKJ"],
  }]);

  process.exit();
};

main();
